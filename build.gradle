project.ext.isDefaultEnvironment = !project.hasProperty('overrideBuildEnvironment')

File getEnvironmentScript()
{
  final File env = file(isDefaultEnvironment ? 'defaultEnvironment.gradle' : project.overrideBuildEnvironment)
  assert env.isFile() : "The environment script [$env] does not exists or is not a file."
  return env
}

apply from: environmentScript

project.ext.externalDependency = [
  'zookeeper':'org.apache.zookeeper:zookeeper:3.3.4',
  'protobuf':'com.google.protobuf:protobuf-java:2.4.0a',
  'log4j':'log4j:log4j:1.2.17',
  'netty':'io.netty:netty:3.7.0.Final',
  'slf4jApi':'org.slf4j:slf4j-api:1.7.5',
  'slf4jLog4j':'org.slf4j:slf4j-log4j12:1.7.5',
  'specs':'org.scala-tools.testing:specs_2.8.1:1.6.8',
  'mockitoAll':'org.mockito:mockito-all:1.8.4',
  'cglib':'cglib:cglib:2.1_3',
  'objenesis':'org.objenesis:objenesis:1.2',
  'scalaCompiler': 'org.scala-lang:scala-compiler:2.8.1',
  'scalaLibrary': 'org.scala-lang:scala-library:2.8.1',
  'scalatest': 'org.scalatest:scalatest:1.2',
  'junit':'junit:junit:4.8.1'
];

subprojects {
  plugins.withType(JavaPlugin) {
    project.dependencies {
      testCompile externalDependency.junit
    }
  }
}
